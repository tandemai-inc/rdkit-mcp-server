# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json
# Learn more about building a configuration: https://promptfoo.dev/docs/configuration/guide

description: "RDKit MCP Server Eval"

prompts:
  - "{{prompt}}"

providers:
  - id: 'file://python_provider.py'
    label: '4o'
    config:
      model: 'gpt-4o'
  - id: 'file://python_provider.py'
    label: 'o1'
    config:
      model: 'o1'

tests:
  - vars:
      prompt: "What is the molecular weight of the compound with SMILES: {{smiles}}?"
      smiles: "CC(=O)NC1=CC=C(C=C1)O"
      expected_output: 151.165
    description: "Verify molecular weight of `CC(=O)NC1=CC=C(C=C1)O`"
    assert:
      - type: llm-rubric
        value: "The final output states the Molecular weight is {{expected_output}} g/mol."
      - type: llm-rubric
        value: "There is a function call to `mol_wt` with the exact smiles `{{smiles}}` as an argument."
      - type: llm-rubric
        value: "mol_wt function call output returns the value {{expected_output}}"
  
  - vars:
      prompt: "Give me the number of rotatable bonds in this SMILES: CCOC(=O)C1=CC=CC=C1?"
      smiles: "CCOC(=O)C1=CC=CC=C1"
      expected_output: 2
    description: "Verify number of rotatable bonds in `CCOC(=O)C1=CC=CC=C1`"
    assert:
      - type: llm-rubric
        value: "The final output states the number of rotatable bonds is {{expected_output}}."
      - type: llm-rubric
        value: "The response should contain a function call with the exact smiles `{{smiles}}` as an argument."
      - type: llm-rubric
        value: "The response should contain an output type which returns the value {{expected_output}}."

  - vars:
      prompt: "Find all molecules in this list that contain a pyridine ring: C1=CC=CN=C1, C1=CC=CC=C1, CC(C)C1=CN=CC=C1"
      expected_output: ["C1=CC=CN=C1", "CC(C)C1=CN=CC=C1"]
    description: "Verify pyridine ring detection in a list of SMILES"
    assert:
      - type: llm-rubric
        value: "The final output states that the SMILES in {{expected_output}} contain pyridine rings."

  - vars:
      prompt: "Compute the number of hydrogen bond donors and acceptors for this molecule: COc1ccc(CO)cc1"
      expected_output: "Donors: 1, Acceptors: 2"
    description: "Verify hydrogen bond donor and acceptor counting"
    assert:
      - type: llm-rubric
        value: "The final output states that the SMILES has 1 Donor hydrogen bond, and 2 Acceptors."

  - vars:
      prompt: |
        Which of these is more similar to this reference molecule
        Reference: CC(=O)OC1=CC=CC=C1C(=O)O
        Candidates: CC(OC1C(C(O)=O)=CC(C)=CC=1)=O or CCOC(C)C or C1C=CC=CC=1
      expected_output: "CC(OC1C(C(O)=O)=CC(C)=CC=1)=O"
    description: "Verify similarity comparison of molecules"
    assert:
      - type: llm-rubric
        value: "The final output states that CC(OC1C(C(O)=O)=CC(C)=CC=1)=O is the most similar to the reference"
      - type: llm-rubric
        value: "We expect a function to calculate the tanimoto similarity between the reference for each candidate"
